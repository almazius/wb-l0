version: "3"

services:
#  wb-l0:
#    image: golang
#    build:
#      dockerfile: Dockerfile
#    depends_on:
#    - stan
#    - postgres
##      stan:
##        condition: service_healthy
##      postgres:
##        condition: service_healthy
#    ports:
#      - "8080:8080"

  stan:
    image: nats-streaming:latest
    ports:
      - 4222:4222
      - 8222:8222
    command:
      - "--cluster"
      - "nats://0.0.0.0:6222"
      - "--cluster_id"
      - test-cluster
      - "--clustered"
      - "--cluster_bootstrap"
      - "--cluster_log_path"
      - /data/log
      - "--cluster_node_id"
      - nats-streaming-1
      - "--cluster_raft_logging"
      - "--debug"
      - "--dir"
      - /data/msg
      - "--http_port"
      - "8222"
      - "--port"
      - "4222"
      - "--store"
      - file
      - "--stan_debug"
      - "--hb_interval"
      - 2s
      - "--hb_fail_count"
      - "1"
      - "--hb_timeout"
      - 5s
#    healthcheck:
#      test: ["CMD", "sh", "-c", "nc -z localhost 8222"]
#      interval: 3s
#      timeout: 5s
#      retries: 10

  postgres:
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_USER: "almaz"
      POSTGRES_PASSWORD: "almaz"
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-U", "almaz","-P", "almaz", "-d", "wb" ]
#      interval: 3s
#      timeout: 5s
#      retries: 10
    volumes:
      - ./migration/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./migration/migration.sql:/docker-entrypoint-initdb.d/migration.sql
    ports:
      - "5432:5432"